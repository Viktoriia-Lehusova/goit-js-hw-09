{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAuBpC,SAASC,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IA9BPL,EAAKc,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAIJ,IAHA,IAAMC,EAAaC,OAAOlB,EAAKK,MAAMc,OAC/BC,EAAYF,OAAOlB,EAAKqB,KAAKF,OAC7BG,EAAcJ,OAAOlB,EAAKuB,OAAOJ,OAC9BK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EAAG,CAExCrB,EAAcqB,EADQP,EAAaG,GAAaI,EAAI,IAEjDC,MAAK,SAAAN,GACJO,EAAA5B,GAAS6B,OAAOC,QAAQT,GACxBU,QAAQC,IAAIX,E,IAEbY,OAAM,SAAAC,GACLN,EAAA5B,GAAS6B,OAAOM,QAAQD,GACxBH,QAAQC,IAAIE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const delayInput = Number(form.delay.value);\n  const stepInput = Number(form.step.value);\n  const amountInput = Number(form.amount.value);\n  for (let i = 1; i <= amountInput; i += 1) {\n    const delayPlusStep = delayInput + stepInput * (i - 1);\n    createPromise(i, delayPlusStep)\n      .then(value => {\n        Notiflix.Notify.success(value);\n        console.log(value);\n      })\n      .catch(err => {\n        Notiflix.Notify.failure(err);\n        console.log(err);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","evt","preventDefault","delayInput","Number","value","stepInput","step","amountInput","amount","i","then","$parcel$interopDefault","Notify","success","console","log","catch","err","failure"],"version":3,"file":"03-promises.a0342cdb.js.map"}